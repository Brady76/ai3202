import Queue
#Holds all terrainTypes
Matrix = []
myfile = open('World1.txt','r')
Matrix = [[int(n) for n in line.split()] for line in myfile]
#print Matrix
#Holds coordinates
Coordinates = []
for x in range(7):
    for y in range(9):
        Coordinates.append([x, y])
print Coordinates
        
openList = Queue.PriorityQueue()
openList.put((9,0), 0)
came_from = {}
cost_so_far = {}
came_from[(9,0)] = None
cost_so_far[(9,0)] = 0
location_to_terrain = {}

#indexes coordinates to terrain values 
for x in range(8):
	for y in range(10):
		location_to_terrain[(x,y)] = Matrix[x][y]
		
#Finds neighboring squares
def neighbors(node):
	dirs = [[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1],[0,-1],[1,-1]]
	result = []
	for dir in dirs:
		neighbor = [node[0] + dir[0], node[1] + dir[1]]
		#only append if the index exists
		if neighbor in Coordinates:
			result.append([node[0] + dir[0],node[1] + dir[1]])


while not openList.empty():
   current = openList.get()

   if current == (0,9):
      break
   for next in graph.neighbors(current):
      new_cost = cost_so_far[current] + graph.cost(current, next)
      if next not in cost_so_far or new_cost < cost_so_far[next]:
         cost_so_far[next] = new_cost
         priority = new_cost + heuristic(goal, next)
         frontier.put(next, priority)
         came_from[next] = current
